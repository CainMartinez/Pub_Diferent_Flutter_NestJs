CREATE DATABASE IF NOT EXISTS `zero_waste_db` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
USE `zero_waste_db`;

-- USERS & PROFILES
CREATE TABLE IF NOT EXISTS users (
  id INT AUTO_INCREMENT PRIMARY KEY,
  uuid CHAR(36) UNIQUE,
  email VARCHAR(190) NOT NULL UNIQUE,
  name VARCHAR(190) NOT NULL,
  password_hash VARCHAR(255) NOT NULL,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS profiles (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  phone VARCHAR(50),
  address_line1 VARCHAR(190),
  address_line2 VARCHAR(190),
  city VARCHAR(120),
  postal_code VARCHAR(30),
  country_code VARCHAR(2) DEFAULT 'ES',
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_profiles_user FOREIGN KEY (user_id) REFERENCES users(id)
) ENGINE=InnoDB;

-- CATEGORIES, ALLERGENS, PRODUCTS, MENUS
CREATE TABLE IF NOT EXISTS categories (
  id INT AUTO_INCREMENT PRIMARY KEY,
  uuid CHAR(36) UNIQUE,
  code VARCHAR(50) NOT NULL UNIQUE, -- bebidas|entrantes|principales|postres
  name_es VARCHAR(190),
  name_en VARCHAR(190),
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS allergens (
  code VARCHAR(50) PRIMARY KEY,
  name_es VARCHAR(190),
  name_en VARCHAR(190),
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS products (
  id INT AUTO_INCREMENT PRIMARY KEY,
  uuid CHAR(36) UNIQUE,
  category_id INT NOT NULL,
  name_es VARCHAR(190),
  name_en VARCHAR(190),
  description_es TEXT,
  description_en TEXT,
  price DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  currency VARCHAR(3) NOT NULL DEFAULT 'EUR',
  is_vegan TINYINT(1) NOT NULL DEFAULT 0,
  barcode VARCHAR(64),
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_products_category FOREIGN KEY (category_id) REFERENCES categories(id)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS product_allergen (
  id INT AUTO_INCREMENT PRIMARY KEY,
  product_id INT NOT NULL,
  allergen_code VARCHAR(50) NOT NULL,
  contains TINYINT(1) NOT NULL DEFAULT 1,
  may_contain TINYINT(1) NOT NULL DEFAULT 0,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_pa_product FOREIGN KEY (product_id) REFERENCES products(id),
  CONSTRAINT fk_pa_allergen FOREIGN KEY (allergen_code) REFERENCES allergens(code),
  UNIQUE KEY uq_product_allergen (product_id, allergen_code)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS rescue_menus (
  id INT AUTO_INCREMENT PRIMARY KEY,
  uuid CHAR(36) UNIQUE,
  name_es VARCHAR(190),
  name_en VARCHAR(190),
  description_es TEXT,
  description_en TEXT,
  drink_id INT NOT NULL,
  starter_id INT NOT NULL,
  main_id INT NOT NULL,
  dessert_id INT NOT NULL,
  price DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  currency VARCHAR(3) NOT NULL DEFAULT 'EUR',
  is_vegan TINYINT(1) NOT NULL DEFAULT 0,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_rescue_menu_drink FOREIGN KEY (drink_id) REFERENCES products(id),
  CONSTRAINT fk_rescue_menu_starter FOREIGN KEY (starter_id) REFERENCES products(id),
  CONSTRAINT fk_rescue_menu_main FOREIGN KEY (main_id) REFERENCES products(id),
  CONSTRAINT fk_rescue_menu_dessert FOREIGN KEY (dessert_id) REFERENCES products(id)
) ENGINE=InnoDB;

-- VENUES, OPENING HOURS & PICKUP SLOTS
CREATE TABLE IF NOT EXISTS venues (
  id INT AUTO_INCREMENT PRIMARY KEY,
  uuid CHAR(36) UNIQUE,
  code VARCHAR(50) UNIQUE,
  name VARCHAR(190),
  timezone VARCHAR(50) NOT NULL DEFAULT 'Europe/Madrid',
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS opening_hours (
  id INT AUTO_INCREMENT PRIMARY KEY,
  venue_id INT NOT NULL,
  weekday SMALLINT NOT NULL,  -- 0=Mon..6=Sun
  open_time TIME NOT NULL,
  close_time TIME NOT NULL,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_opening_hours_venue FOREIGN KEY (venue_id) REFERENCES venues(id)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS pickup_slots (
  id INT AUTO_INCREMENT PRIMARY KEY,
  venue_id INT NOT NULL,
  slot_date DATE NOT NULL,
  start_time TIME NOT NULL,
  end_time TIME NOT NULL,
  capacity INT NOT NULL DEFAULT 1,
  booked_count INT NOT NULL DEFAULT 0,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_pickup_slots_venue FOREIGN KEY (venue_id) REFERENCES venues(id),
  UNIQUE KEY uq_slot (venue_id, slot_date, start_time)
) ENGINE=InnoDB;

-- ORDERS, ORDER ITEMS, INVOICES
CREATE TABLE IF NOT EXISTS orders (
  id INT AUTO_INCREMENT PRIMARY KEY,
  uuid CHAR(36) UNIQUE,
  user_id INT NOT NULL,
  status VARCHAR(32) NOT NULL DEFAULT 'confirmed', -- draft|confirmed|prepared|delivered|cancelled
  pickup_slot_id INT NULL,
  subtotal DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  total DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  currency VARCHAR(3) NOT NULL DEFAULT 'EUR',
  notes TEXT,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_orders_user FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT fk_orders_slot FOREIGN KEY (pickup_slot_id) REFERENCES pickup_slots(id)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS order_items (
  id INT AUTO_INCREMENT PRIMARY KEY,
  order_id INT NOT NULL,
  item_type VARCHAR(16) NOT NULL, -- product|rescue_menu
  product_id INT NULL,
  rescue_menu_id INT NULL,
  quantity DECIMAL(10,2) NOT NULL DEFAULT 1.00,
  unit_price DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  line_total DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_oi_order FOREIGN KEY (order_id) REFERENCES orders(id),
  CONSTRAINT fk_oi_product FOREIGN KEY (product_id) REFERENCES products(id),
  CONSTRAINT fk_oi_rescue_menu FOREIGN KEY (rescue_menu_id) REFERENCES rescue_menus(id)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS invoices (
  id INT AUTO_INCREMENT PRIMARY KEY,
  uuid CHAR(36) UNIQUE,
  user_id INT NOT NULL,
  order_id INT NOT NULL,
  number VARCHAR(64) UNIQUE,
  status VARCHAR(16) NOT NULL DEFAULT 'requested', -- requested|issued|cancelled
  total DECIMAL(10,2) NOT NULL DEFAULT 0.00,
  issued_at TIMESTAMP NULL,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_invoices_user FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT fk_invoices_order FOREIGN KEY (order_id) REFERENCES orders(id)
) ENGINE=InnoDB;

-- LOYALTY
CREATE TABLE IF NOT EXISTS loyalty_accounts (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL UNIQUE,
  points INT NOT NULL DEFAULT 0,
  purchases_count INT NOT NULL DEFAULT 0,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_loyalty_user FOREIGN KEY (user_id) REFERENCES users(id)
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS loyalty_rules (
  id INT AUTO_INCREMENT PRIMARY KEY,
  uuid CHAR(36) UNIQUE,
  code VARCHAR(64) UNIQUE,
  every_n_purchases INT NOT NULL DEFAULT 10,
  reward_type VARCHAR(32) NOT NULL DEFAULT 'free_menu',
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
) ENGINE=InnoDB;

CREATE TABLE IF NOT EXISTS loyalty_redemptions (
  id INT AUTO_INCREMENT PRIMARY KEY,
  user_id INT NOT NULL,
  rule_id INT NOT NULL,
  rescue_menu_id INT NOT NULL,
  order_id INT NULL,
  redeemed_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  is_active TINYINT(1) NOT NULL DEFAULT 1,
  created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
  updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  CONSTRAINT fk_lr_user FOREIGN KEY (user_id) REFERENCES users(id),
  CONSTRAINT fk_lr_rule FOREIGN KEY (rule_id) REFERENCES loyalty_rules(id),
  CONSTRAINT fk_lr_rescue_menu FOREIGN KEY (rescue_menu_id) REFERENCES rescue_menus(id),
  CONSTRAINT fk_lr_order FOREIGN KEY (order_id) REFERENCES orders(id)
) ENGINE=InnoDB;